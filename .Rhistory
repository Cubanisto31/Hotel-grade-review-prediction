library(readr)
tripadvisor_hotel_reviews <- read_csv("~/Test IA avis hotel/tripadvisor_hotel_reviews.csv")
View(tripadvisor_hotel_reviews)
View(tripadvisor_hotel_reviews)
View(tripadvisor_hotel_reviews)
library(readr)
tripadvisor_hotel_reviews <- read_csv("~/Test IA avis hotel/tripadvisor_hotel_reviews.csv")
View(tripadvisor_hotel_reviews)
df <- read_csv("~/Test IA avis hotel/tripadvisor_hotel_reviews.csv")
rm(tripadvisor_hotel_reviews)
View(df)
df <- df %>% mutate(length = nchar(df$Review) )
library(dplyr)
df <- df %>% mutate(length = nchar(df$Review) )
View(df)
df <- df %>%
mutate(character_number = nchar(df$Review)) %>%
mutate(words_number = sapply(strsplit(df$Review, "\\s+"), length))
View(df)
#Importer la base de données
tripadvisor_hotel_reviews <- read_csv("~/Test IA avis hotel/tripadvisor_hotel_reviews.csv")
df <- tripadvisor_hotel_reviews
df <- df %>%
mutate(character_number = nchar(df$Review)) %>%
mutate(words_number = sapply(strsplit(df$Review, "\\s+"), length))
View(df)
summary(df$words_number)
summary(df$character_number)
df <- df %>%
mutate(
class_Ch_N = case_when(
character_number <= 337 ~ "Très petit",
character_number <= 535 ~ "Petit",
character_number <= 857 ~ "Grand",
TRUE ~ "Très grand"
),
mutate(
class_W_N = case_when(
words_number <= 48 ~ "Très petit"
words_number <= 77 ~ "Petit"
))
words_number <= 124 ~ "Grand",
TRUE ~ "Très grand"))
TRUE ~ "Très grand")
df <- df %>%
mutate(
class_Ch_N = case_when(
character_number <= 337 ~ "Très petit",
character_number <= 535 ~ "Petit",
character_number <= 857 ~ "Grand",
TRUE ~ "Très grand"))
View(df)
df <- df %>%
mutate(
class_W_N = case_when(
words_number <= 48 ~ "Très petit",
words_number <= 77 ~ "Petit",
words_number <= 124 ~ "Grand",
TRUE ~ "Très grand"))
View(df)
table(df$class_Ch_N, df$class_W_N)
View(df)
View(tripadvisor_hotel_reviews)
View(df)
a <- table(df$class_Ch_N, df$class_W_N)
plot(a)
print(a)
library(ggplot2)
a <- as.data.frame(a)
View(a)
View(a)
ggplot(a, aes(x = Var1, y= Var2, fill= Freq))
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile()
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue")
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue")
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres")
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
install.packages("formattable")
library(formattable)
formattable(a,
list(Freq = color_tile("white", "lightblue")))
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
View(a)
help("reorder")
# Réordonner les modalités de Var1 dans un ordre spécifique
df$Var1 <- factor(df$Var1, levels = c("très petit", "petit", "grand", "très grand"))
# Réordonner les modalités de Var1 dans un ordre spécifique
a$Var1 <- factor(a$Var1, levels = c("très petit", "petit", "grand", "très grand"))
View(a)
df <- df %>%
mutate(
class_W_N = case_when(
words_number <= 48 ~ "Très petit",
words_number <= 77 ~ "Petit",
words_number <= 124 ~ "Grand",
TRUE ~ "Très grand"))
a <- table(df$class_Ch_N, df$class_W_N)
a <- as.data.frame(a)
View(a)
# Réordonner les modalités de Var1 dans un ordre spécifique
a$Var1 <- factor(a$Var1, levels = c("Très petit", "Petit", "Grand", "Très grand"))
View(a)
df <- df %>%
mutate(
class_W_N = case_when(
words_number <= 48 ~ "Très petit",
words_number <= 77 ~ "Petit",
words_number <= 124 ~ "Grand",
TRUE ~ "Très grand"))
a <- table(df$class_Ch_N, df$class_W_N)
a <- as.data.frame(a)
View(a)
# Réordonner les modalités de Var1 dans un ordre spécifique
a$Var1 <- factor(a$Var1, levels = c("Très petit", "Petit", "Grand", "Très grand"))
View(a)
View(a)
View(a)
View(a)
# Trier les lignes du dataframe selon l'ordre de Var1
df <- df %>%
arrange(Var1)
# Trier les lignes du dataframe selon l'ordre de Var1
a <- a %>%
arrange(Var1)
View(a)
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
a$Var2 <- factor(a$Var1, levels = c("Très petit", "Petit", "Grand", "Très grand"))
# Trier les lignes du dataframe selon l'ordre de Var1
a <- a %>%
arrange(Var2)
View(a)
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
View(a)
a <- as.data.frame(a)
df <- df %>%
mutate(
class_W_N = case_when(
words_number <= 48 ~ "Très petit",
words_number <= 77 ~ "Petit",
words_number <= 124 ~ "Grand",
TRUE ~ "Très grand"))
a <- table(df$class_Ch_N, df$class_W_N)
a <- as.data.frame(a)
# Réordonner les modalités de Var1 dans un ordre spécifique
a$Var1 <- factor(a$Var1, levels = c("Très petit", "Petit", "Grand", "Très grand"))
# Trier les lignes du dataframe selon l'ordre de Var1
a <- a %>%
arrange(Var1)
a$Var2 <- factor(a$Var2, levels = c("Très petit", "Petit", "Grand", "Très grand"))
# Trier les lignes du dataframe selon l'ordre de Var1
a <- a %>%
arrange(Var2)
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
View(a)
library(dplyr)
library(ggplot2)
library(formattable)
#Importer la base de données
tripadvisor_hotel_reviews <- read_csv("~/Test IA avis hotel/tripadvisor_hotel_reviews.csv")
#Importer la base de données
tripadvisor_hotel_reviews <- read_csv("~/tripadvisor_hotel_reviews.csv")
help("read.csv")
help("read_csv")
help(read_csv)
library(readr)
#Importer la base de données
tripadvisor_hotel_reviews <- read_csv("~/tripadvisor_hotel_reviews.csv")
#Importer la base de données
tripadvisor_hotel_reviews <- read_csv("tripadvisor_hotel_reviews.csv")
df <- tripadvisor_hotel_reviews
#Importer la base de données
tripadvisor_hotel_reviews <- read_csv("tripadvisor_hotel_reviews.csv")
df <- tripadvisor_hotel_reviews
df <- df %>%
mutate(character_number = nchar(df$Review)) %>%
mutate(words_number = sapply(strsplit(df$Review, "\\s+"), length))
summary(df$words_number)
df <- df %>%
mutate(
class_Ch_N = case_when(
character_number <= 337 ~ "Très petit",
character_number <= 535 ~ "Petit",
character_number <= 857 ~ "Grand",
TRUE ~ "Très grand"))
df <- df %>%
mutate(
class_W_N = case_when(
words_number <= 48 ~ "Très petit",
words_number <= 77 ~ "Petit",
words_number <= 124 ~ "Grand",
TRUE ~ "Très grand"))
a <- table(df$class_Ch_N, df$class_W_N)
#Voir si je ne peux pas un peu optimiser ce bout infra
a <- as.data.frame(a)
# Réordonner les modalités de Var1 dans un ordre spécifique
a$Var1 <- factor(a$Var1, levels = c("Très petit", "Petit", "Grand", "Très grand"))
# Trier les lignes du dataframe selon l'ordre de Var1
a <- a %>%
arrange(Var1)
a$Var2 <- factor(a$Var2, levels = c("Très petit", "Petit", "Grand", "Très grand"))
# Trier les lignes du dataframe selon l'ordre de Var2
a <- a %>%
arrange(Var2)
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
# Tracer
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de mots vs nombre de lettres") +
theme_minimal()
# Tracer le tableau de contingence
ggplot(a, aes(x = Var1, y= Var2, fill= Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(x = "Character_number", y = "Word_number", title = "Tableau de contingence nombre de lettres vs nombre de mots") +
theme_minimal()
View(df)
# Ajouter variable longueur moyenne des mots
df <- df %>%
mutate(W_length_mean = character_number / words_number)
View(a)
View(df)
mutate(W_length_mean = round(character_number / words_number)
# Ajouter variable longueur moyenne des mots
df <- df %>%
# Ajouter variable longueur moyenne des mots
df <- df %>%
mutate(W_length_mean = round(character_number / words_number))
View(df)
summary(df$W_length_mean)
table(df$W_length_mean)
View(df)
table(df)
colnames(df)
summary(df$Rating)
table(df$Rating)
#Tracer la répartition des notes attribuées
grade_rep <- table(df$Rating)
grade_rep <- as.data.frame(grade_rep)
View(grade_rep)
ggplot(grade_rep, aes(x = Var1, y=Freq))
ggplot(grade_rep, aes(x = Var1, y=Freq))+
barplot()
help("barplot")
help("ggplot")
ggplot(grade_rep, aes(x = Var1, y=Freq))+
geom_histogram()
ggplot(grade_rep, aes(x = Var1))+
geom_histogram()
rlang::last_trace()
ggplot(grade_rep, aes(x = Var1))+
geom_bar()
ggplot(grade_rep, aes(x = Var1))+
geom_bar(fill = "skyblue", color = "black")
ggplot(grade_rep, aes(x = Var1, y = Freq ))+
geom_bar(fill = "skyblue", color = "black")
ggplot(grade_rep, aes(x = Var1 ))+
geom_bar(fill = "skyblue", color = "black")
ggplot(grade_rep, aes(x = Var1 ))+
geom_bar(fill = "skyblue", color = "black") +
scale_x_continuous(breaks = 1:5) +            # Ajuster les abscisses aux valeurs de 1 à 5
labs(title = "Distribution des notes", x = "Note", y = "Fréquence") +
theme_minimal()
ggplot(grade_rep, aes(x = Var1 ))+
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des notes", x = "Note", y = "Fréquence") +
theme_minimal()
ggplot(grade_rep, aes(x = Var1, y = Freq ))+
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(title = "Distribution des notes", x = "Note", y = "Fréquence") +
theme_minimal()
help('geom_bar')
library(MASS)
model <- polr(Rating ~ character_number, data = df, method = "logistic")
View(df)
model <- polr(as.factor(Rating) ~ character_number, data = df, method = "logistic")
summary(model)
summary(model)
summarise(model)
model
help(polr)
rm(model)
View(df)
model2 <- polr(as.factor(Rating) ~ words_number, data = df, method = "logistic")
model2
model1
model1 <- polr(as.factor(Rating) ~ character_number, data = df, method = "logistic")
model1
View(df)
View(df)
model3 <- polr(as.factor(Rating) ~ class_Ch_N, data = df, method = "logistic")
model3
model4 <- polr(as.factor(Rating) ~ class_W_N, data = df, method = "logistic")
model4
model5 <- polr(as.factor(Rating) ~ W_length_mean, data = df, method = "logistic")
model5
View(model4)
